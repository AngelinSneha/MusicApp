[{"C:\\Users\\Angelin\\TopMusic\\src\\components\\App.js":"1","C:\\Users\\Angelin\\TopMusic\\src\\components\\GlobalState.js":"2","C:\\Users\\Angelin\\TopMusic\\src\\components\\SwipeMenu.js":"3","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\MainPlayer.js":"4","C:\\Users\\Angelin\\TopMusic\\src\\components\\LoginPage.js":"5","C:\\Users\\Angelin\\TopMusic\\src\\components\\sections\\HomePage.js":"6","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\NextButton.js":"7","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\MusicArt.js":"8","C:\\Users\\Angelin\\TopMusic\\src\\components\\RelatedVideos.js":"9","C:\\Users\\Angelin\\TopMusic\\src\\apis\\youtubeSearch.js":"10","C:\\Users\\Angelin\\TopMusic\\src\\components\\sections\\SongCard.js":"11","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\SleepTimer.js":"12","C:\\Users\\Angelin\\TopMusic\\src\\apis\\getAudioLink.js":"13","C:\\Users\\Angelin\\TopMusic\\src\\components\\AppContainer.js":"14","C:\\Users\\Angelin\\TopMusic\\src\\components\\header\\SimpleAppBar.js":"15","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\TopBar.js":"16","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\PreviousButton.js":"17","C:\\Users\\Angelin\\TopMusic\\src\\components\\header\\SearchBox.js":"18","C:\\Users\\Angelin\\TopMusic\\src\\apis\\suggestSearch.js":"19"},{"size":296,"mtime":1606143059591,"results":"20","hashOfConfig":"21"},{"size":1486,"mtime":1606143059692,"results":"22","hashOfConfig":"21"},{"size":3001,"mtime":1606143059849,"results":"23","hashOfConfig":"21"},{"size":17508,"mtime":1606143059993,"results":"24","hashOfConfig":"21"},{"size":1263,"mtime":1606143059725,"results":"25","hashOfConfig":"21"},{"size":3691,"mtime":1606143060154,"results":"26","hashOfConfig":"21"},{"size":356,"mtime":1606143060032,"results":"27","hashOfConfig":"21"},{"size":4303,"mtime":1606143060029,"results":"28","hashOfConfig":"21"},{"size":3611,"mtime":1606143059751,"results":"29","hashOfConfig":"21"},{"size":637,"mtime":1606143024775,"results":"30","hashOfConfig":"21"},{"size":2843,"mtime":1606143060175,"results":"31","hashOfConfig":"21"},{"size":4088,"mtime":1606143060052,"results":"32","hashOfConfig":"21"},{"size":150,"mtime":1606145605655,"results":"33","hashOfConfig":"21"},{"size":1989,"mtime":1606143059656,"results":"34","hashOfConfig":"21"},{"size":2716,"mtime":1606143059980,"results":"35","hashOfConfig":"21"},{"size":3165,"mtime":1606143060135,"results":"36","hashOfConfig":"21"},{"size":369,"mtime":1606143060045,"results":"37","hashOfConfig":"21"},{"size":5129,"mtime":1606143059927,"results":"38","hashOfConfig":"21"},{"size":355,"mtime":1606143024723,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"xfgc5w",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Angelin\\TopMusic\\src\\components\\App.js",[],["84","85"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\GlobalState.js",[],"C:\\Users\\Angelin\\TopMusic\\src\\components\\SwipeMenu.js",["86","87","88","89","90","91","92","93"],"import React, { useState, useContext, useEffect, useCallback } from \"react\";\r\n\r\nimport {\r\n  SwipeableDrawer,\r\n  Avatar,\r\n  Divider,\r\n  Button,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Link as MaterialLink\r\n} from \"@material-ui/core\";\r\n\r\n// import sun from '@material-ui/icons/Brightness5';\r\n// import B2 from '@material-ui/icons/Brightness2';\r\nimport {\r\n  AccountCircle,\r\n  Feedback,\r\n  Info,\r\n  FreeBreakfast,\r\n  People,\r\n  Settings\r\n} from \"@material-ui/icons\";\r\n\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\nimport \"./darkMode.css\";\r\nimport moon from \"../images/moon-solid.svg\";\r\nimport sun from \"../images/sun-solid.svg\";\r\n\r\nconst SwipeMenu = () => {\r\n  const [{ menuOpen, themeSelectValue }, dispatch] = useContext(GlobalContext);\r\n\r\n  const setMenuOpen = data => {\r\n    dispatch({ type: \"setMenuOpen\", snippet: data });\r\n  };\r\n\r\n  const setThemeSelectValue = useCallback(\r\n    data => {\r\n      dispatch({ type: \"setThemeSelectValue\", snippet: data });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [isNight, setIsNight] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (themeSelectValue === \"Dark\") {\r\n      setIsNight(true);\r\n    } else {\r\n      setIsNight(false);\r\n    }\r\n  }, [themeSelectValue]);\r\n\r\n  const changeTheme = theme => {\r\n    setThemeSelectValue(theme);\r\n    localStorage.setItem(\"selectedTheme\", theme);\r\n  };\r\n\r\n  const handleThemeToggle = () => {\r\n    if (!isNight) {\r\n      changeTheme(\"Dark\");\r\n      setIsNight(false);\r\n    } else {\r\n      changeTheme(\"Default\");\r\n      setIsNight(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SwipeableDrawer\r\n      open={menuOpen}\r\n      onClose={() => setMenuOpen(false)}\r\n      onOpen={() => setMenuOpen(true)}\r\n    >\r\n      <div style={{ width: \"300px\" }}>\r\n        <div\r\n          style={{\r\n            margin: \"35px\",\r\n            position: \"relative\",\r\n            width: \"30px\",\r\n            height: \"30px\"\r\n          }}\r\n        >\r\n          <AnimatePresence>\r\n            <motion.img\r\n              key={isNight ? sun : moon}\r\n              initial={{ scale: 1.5 }}\r\n              animate={{ scale: 1.5, rotate: \"360deg\" }}\r\n              exit={{ scale: 0 }}\r\n              // transition={{ duration: 0.5 }}\r\n              src={isNight ? sun : moon}\r\n              onClick={() => handleThemeToggle()}\r\n              className=\"dayNightToggleBtn\"\r\n              alt=\"sun moon icon\"\r\n            />\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        <Divider />\r\n\r\n        <List\r\n          component=\"nav\"\r\n          className={\"pinkLists\"}\r\n          onClick={() => setMenuOpen(false)}\r\n        >\r\n          <ListItem button component={Link} to=\"/settings\">\r\n            <ListItemIcon>\r\n              <Settings />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Settings\" />\r\n          </ListItem>\r\n        </List>\r\n      </div>\r\n    </SwipeableDrawer>\r\n  );\r\n};\r\n\r\nexport default SwipeMenu;","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\MainPlayer.js",["94","95","96","97","98","99"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\LoginPage.js",["100","101","102","103","104"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NavigateNext } from \"@material-ui/icons\";\r\nimport bgImg from \"../images/music-bg.svg\";\r\nimport gIcon from \"../images/google.svg\";\r\n// import handcraftedText from \"../images/music.jpg\";\r\n\r\n// import GoogleSignIn from \"./GoogleSignIn\";\r\n\r\nconst bgStyle = {\r\n  background: `url(${bgImg}) no-repeat`,\r\n  backgroundPositionX: \"50%\",\r\n  width: \"100vw\",\r\n  height: \"46vh\"\r\n};\r\n\r\n\r\n\r\nconst LoginPage = ({ continueToHome }) => {\r\n\r\n  return (\r\n    <Grid\r\n      style={{ height: \"80vh\" }}\r\n      container\r\n      direction=\"column\"\r\n      justify=\"space-around\"\r\n      alignItems=\"center\"\r\n    >\r\n      {/* {showSignIn()} */}\r\n\r\n      <div style={bgStyle} />\r\n\r\n      <Typography\r\n        variant=\"h6\"\r\n        color=\"primary\"\r\n        align=\"center\"\r\n        style={{ padding: \"10px\" }}\r\n      >\r\n        Listen to unlimited songs without any ads for free only on Top Music\r\n      </Typography>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={continueToHome}>\r\n        Continue\r\n        <NavigateNext />\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Angelin\\TopMusic\\src\\components\\sections\\HomePage.js",["105","106"],"import React, { useState, useEffect } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nimport SongCard from \"./SongCard\";\r\n\r\nimport youtubeSearch from \"../../apis/youtubeSearch\";\r\n\r\n// make a permanent playlist object with few songs catergory\r\nconst playlistsIds = {\r\n  LatestSongs: \"PLFgquLnL59akA2PflFpeQG9L01VFg90wS\",\r\n  RomanticSongs: \"PL64G6j8ePNureM8YCKy5nRFyzYf8I2noy\",\r\n  EdmSongs: \"PLw-VjHDlEOgs658kAHR_LAaILBXb-s6Q5\",\r\n  TopBolloywood: \"PLcRN7uK9CFpPkvCc-08tWOQo6PAg4u0lA\",\r\n  TopPop: \"PLDcnymzs18LU4Kexrs91TVdfnplU3I5zs\",\r\n  Reggaeton: \"PLS_oEMUyvA728OZPmF9WPKjsGtfC75LiN\"\r\n};\r\n\r\nlet slowConnectionTimeout;\r\nconst HomePage = () => {\r\n  // for home playlist\r\n  const [songObj, setSongObj] = useState({});\r\n\r\n  const fetchFromApi = () => {\r\n    slowConnectionTimeout = setTimeout(() => {}, 5000);\r\n\r\n    const getTrendingMusic = async () => {\r\n      const res = await youtubeSearch.get(\"videos\", {\r\n        params: {\r\n          chart: \"mostPopular\",\r\n          videoCategoryId: \"10\",\r\n          regionCode: localStorage.getItem(\"country_code\")\r\n        }\r\n      });\r\n\r\n      return res.data.items;\r\n    };\r\n\r\n    const getPlayListItems = async data => {\r\n      const res = await youtubeSearch.get(\"playlistItems\", {\r\n        params: {\r\n          playlistId: data\r\n        }\r\n      });\r\n      return res.data.items;\r\n    };\r\n\r\n    getTrendingMusic().then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ trending: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.LatestSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ latestSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.RomanticSongs).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ romanticSongs: data } };\r\n      });\r\n    });\r\n\r\n    getPlayListItems(playlistsIds.TopBolloywood).then(data => {\r\n      setSongObj(prevState => {\r\n        return { ...prevState, ...{ topBolloywood: data } };\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const startingTime = new Date();\r\n    const storedTime = localStorage.getItem(\"trackTime\");\r\n    const savedSongs = JSON.parse(localStorage.getItem(\"homePageSongObj\"));\r\n\r\n    if (!window.navigator.onLine) {\r\n      alert(\"You don't have internet!\");\r\n    }\r\n\r\n    const checkTimeAndFetch = () => {\r\n      const timeElapsed = new Date() - Date.parse(storedTime); //parse the date\r\n\r\n      const timeElapsedInHr = timeElapsed / (1000 * 60 * 60); //convert ms into hr\r\n\r\n      // if time is more than 12 hr we will fetch from the api\r\n\r\n      console.log(\"Saved song\", savedSongs);\r\n      if (timeElapsedInHr > 12 || !savedSongs.latestSongs) {\r\n        fetchFromApi();\r\n        localStorage.setItem(\"trackTime\", startingTime); //dont forgot to update the time\r\n      } else {\r\n        setSongObj(savedSongs);\r\n      }\r\n    };\r\n\r\n    if (!storedTime) {\r\n      // if no time stored we will store it\r\n      localStorage.setItem(\"trackTime\", startingTime);\r\n      fetchFromApi();\r\n    } else {\r\n      checkTimeAndFetch();\r\n    }\r\n  }, []);\r\n\r\n  // if song object changes we will push it to localstoarge\r\n  useEffect(() => {\r\n    localStorage.setItem(\"homePageSongObj\", JSON.stringify(songObj));\r\n  }, [songObj]);\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <SongCard songs={songObj.trending} categotyTitle={\"Trending Now\"} />\r\n\r\n      <SongCard songs={songObj.latestSongs} categotyTitle={\"Latest Music\"} />\r\n\r\n      <SongCard songs={songObj.romanticSongs} categotyTitle={\"Romantic Mood\"} />\r\n\r\n      <SongCard songs={songObj.topBolloywood} categotyTitle={\"Top Bollywood\"} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\NextButton.js",[],"C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\MusicArt.js",["107"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\RelatedVideos.js",["108","109","110","111"],"import React, { useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Typography,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Grid,\r\n  Divider,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport {\r\n  MusicVideo,\r\n  LibraryMusic,\r\n  Shuffle,\r\n  Repeat,\r\n  KeyboardArrowUp,\r\n  KeyboardArrowDown,\r\n  RepeatOne\r\n} from \"@material-ui/icons\";\r\n\r\nimport { GlobalContext } from \"./GlobalState\";\r\n\r\nlet renderResult;\r\n\r\n// written by @bushblade\r\nconst shuffle = arry =>\r\n  arry.reduce(\r\n    (acc, _, i) => {\r\n      const rnd = Math.floor(Math.random() * acc.length),\r\n        temp = acc[i];\r\n      acc[i] = acc[rnd];\r\n      acc[rnd] = temp;\r\n      return acc;\r\n    },\r\n    [...arry]\r\n  );\r\n\r\nconst RelatedVideos = ({\r\n  toggleMaxPlaylist,\r\n  setPlaylist,\r\n  playerState,\r\n  relatedVideos,\r\n  setRelatedVideos,\r\n  setIsRepeatOn,\r\n  isRepeatOn\r\n}) => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n  const handleShuffleClick = () => {\r\n    setRelatedVideos(shuffle(relatedVideos));\r\n  };\r\n\r\n  const spring = {\r\n    type: \"spring\",\r\n    damping: 20,\r\n    stiffness: 300\r\n  };\r\n  const handleClick = video => {\r\n    // set all the info of current clicked video in this object\r\n    setCurrentVideoSnippet({\r\n      id: video.id.videoId,\r\n      title: video.snippet.title,\r\n      channelTitle: video.snippet.channelTitle,\r\n      maxThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/maxresdefault.jpg`,\r\n      sdThumbnail: `https://img.youtube.com/vi/${video.id.videoId}/sddefault.jpg`\r\n      // this is the url of the max resolution of thumbnail\r\n    });\r\n    setPlaylist();\r\n  };\r\n\r\n  if (relatedVideos.length > 1) {\r\n    renderResult = relatedVideos.map(song => {\r\n      return (\r\n        <motion.li key={song.id.videoId} positionTransition={spring}>\r\n          <ListItem\r\n            // key={song.id.videoId}\r\n            button\r\n            onClick={() => handleClick(song)}\r\n            // component={Link}\r\n            // replace\r\n            // to={{ pathname: \"/play\", search: `?id=${song.id.videoId}` }}\r\n          >\r\n            <ListItemIcon>\r\n              <MusicVideo style={{ color: \"#fff\" }} />\r\n            </ListItemIcon>\r\n            <ListItemText\r\n              primary={song.snippet.title.slice(0, 40)}\r\n              secondary={song.snippet.channelTitle.slice(0, 40)}\r\n            />\r\n          </ListItem>\r\n        </motion.li>\r\n      );\r\n    });\r\n  } else {\r\n    return <LinearProgress />;\r\n  }\r\n\r\n  const returnPlaylistExpandBtn = () => {\r\n    if (playerState === \"playlist\") {\r\n      return <KeyboardArrowDown onClick={toggleMaxPlaylist} />;\r\n    } else {\r\n      return <KeyboardArrowUp onClick={toggleMaxPlaylist} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"RelatedVideoContainer\">\r\n      <Grid\r\n        className={\"playlistHeader\"}\r\n        container\r\n        direction=\"row\"\r\n        alignItems=\"center\"\r\n        justify=\"space-between\"\r\n      >\r\n        <LibraryMusic />\r\n        <Typography variant=\"h6\">Coming Next</Typography>\r\n        <Shuffle onClick={handleShuffleClick} />\r\n        {/* this will show the repeat button and repeat the song */}\r\n        {isRepeatOn ? (\r\n          <RepeatOne onClick={setIsRepeatOn} />\r\n        ) : (\r\n          <Repeat onClick={setIsRepeatOn} />\r\n        )}\r\n        {returnPlaylistExpandBtn()}\r\n      </Grid>\r\n      <List dense={true}>{renderResult}</List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RelatedVideos;\r\n","C:\\Users\\Angelin\\TopMusic\\src\\apis\\youtubeSearch.js",[],"C:\\Users\\Angelin\\TopMusic\\src\\components\\sections\\SongCard.js",["112"],"import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../GlobalState\";\r\n\r\nimport {\r\n  Card,\r\n  makeStyles,\r\n  CardActionArea,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  LinearProgress,\r\n  Container\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: 300,\r\n    height: 236,\r\n    display: \"inline-block\",\r\n    margin: \"10px\",\r\n    whiteSpace: \"pre-wrap\"\r\n  },\r\n  media: {\r\n    height: 160\r\n  }\r\n});\r\nconst MediaCard = ({ songs, categotyTitle }) => {\r\n  const [{}, dispatch] = useContext(GlobalContext);\r\n  const setCurrentVideoSnippet = data => {\r\n    dispatch({ type: \"setCurrentVideoSnippet\", snippet: data });\r\n  };\r\n\r\n  const handleClick = video => {\r\n    // set all the info of current clicked video in this object\r\n\r\n    if (!video.snippet.resourceId) {\r\n      setCurrentVideoSnippet({\r\n        id: video.id,\r\n        title: video.snippet.title,\r\n        channelTitle: video.snippet.channelTitle,\r\n        maxThumbnail: `https://img.youtube.com/vi/${video.id}/maxresdefault.jpg`,\r\n        sdThumbnail: `https://img.youtube.com/vi/${video.id}/sddefault.jpg`\r\n        // this is the url of the max resolution of thumbnail\r\n      });\r\n    } else {\r\n      setCurrentVideoSnippet({\r\n        id: video.snippet.resourceId.videoId,\r\n        title: video.snippet.title,\r\n        channelTitle: video.snippet.channelTitle,\r\n        maxThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/maxresdefault.jpg`,\r\n        sdThumbnail: `https://img.youtube.com/vi/${video.snippet.resourceId.videoId}/sddefault.jpg`\r\n        // this is the url of the max resolution of thumbnail\r\n      });\r\n    }\r\n\r\n    console.log(video);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  console.log(\"card re rendered\");\r\n\r\n  if (songs) {\r\n    const renderCards = songs.map(song => {\r\n      return (\r\n        <Card className={classes.card} key={song.id}>\r\n          <CardActionArea onClick={() => handleClick(song)}>\r\n            <CardMedia\r\n              className={classes.media}\r\n              component=\"img\"\r\n              src={song.snippet.thumbnails.high.url}\r\n              loading=\"lazy\"\r\n            />\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"body2\" component=\"p\">\r\n                {song.snippet.title.slice(0, 70) + \" ...\"}\r\n              </Typography>\r\n            </CardContent>\r\n          </CardActionArea>\r\n        </Card>\r\n      );\r\n    });\r\n    return (\r\n      <>\r\n        <Typography variant=\"h5\" style={{ marginLeft: \"15px\" }}>\r\n          {categotyTitle}\r\n        </Typography>\r\n        <div className={\"cardSlider\"}>{renderCards}</div>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Container style={{ height: \"25vh\" }}>\r\n        <LinearProgress color=\"primary\" />\r\n      </Container>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MediaCard;\r\n","C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\SleepTimer.js",["113","114","115","116"],"C:\\Users\\Angelin\\TopMusic\\src\\apis\\getAudioLink.js",[],"C:\\Users\\Angelin\\TopMusic\\src\\components\\AppContainer.js",["117","118","119","120","121"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\header\\SimpleAppBar.js",["122","123","124"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\TopBar.js",["125","126","127","128","129","130","131"],"C:\\Users\\Angelin\\TopMusic\\src\\components\\player\\PreviousButton.js",[],"C:\\Users\\Angelin\\TopMusic\\src\\components\\header\\SearchBox.js",["132"],"C:\\Users\\Angelin\\TopMusic\\src\\apis\\suggestSearch.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":9},{"ruleId":"137","severity":1,"message":"141","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":9},{"ruleId":"137","severity":1,"message":"142","line":12,"column":11,"nodeType":"139","messageId":"140","endLine":12,"endColumn":23},{"ruleId":"137","severity":1,"message":"143","line":18,"column":3,"nodeType":"139","messageId":"140","endLine":18,"endColumn":16},{"ruleId":"137","severity":1,"message":"144","line":19,"column":3,"nodeType":"139","messageId":"140","endLine":19,"endColumn":11},{"ruleId":"137","severity":1,"message":"145","line":20,"column":3,"nodeType":"139","messageId":"140","endLine":20,"endColumn":7},{"ruleId":"137","severity":1,"message":"146","line":21,"column":3,"nodeType":"139","messageId":"140","endLine":21,"endColumn":16},{"ruleId":"137","severity":1,"message":"147","line":22,"column":3,"nodeType":"139","messageId":"140","endLine":22,"endColumn":9},{"ruleId":"137","severity":1,"message":"148","line":50,"column":10,"nodeType":"139","messageId":"140","endLine":50,"endColumn":18},{"ruleId":"137","severity":1,"message":"149","line":50,"column":20,"nodeType":"139","messageId":"140","endLine":50,"endColumn":31},{"ruleId":"137","severity":1,"message":"150","line":127,"column":13,"nodeType":"139","messageId":"140","endLine":127,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":185,"column":6,"nodeType":"153","endLine":185,"endColumn":48,"suggestions":"154"},{"ruleId":"137","severity":1,"message":"155","line":402,"column":11,"nodeType":"139","messageId":"140","endLine":402,"endColumn":19},{"ruleId":"151","severity":1,"message":"156","line":416,"column":6,"nodeType":"153","endLine":416,"endColumn":15,"suggestions":"157"},{"ruleId":"137","severity":1,"message":"158","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":27},{"ruleId":"137","severity":1,"message":"159","line":1,"column":29,"nodeType":"139","messageId":"140","endLine":1,"endColumn":38},{"ruleId":"137","severity":1,"message":"160","line":1,"column":40,"nodeType":"139","messageId":"140","endLine":1,"endColumn":48},{"ruleId":"137","severity":1,"message":"161","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":23},{"ruleId":"137","severity":1,"message":"162","line":7,"column":8,"nodeType":"139","messageId":"140","endLine":7,"endColumn":13},{"ruleId":"137","severity":1,"message":"163","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":20},{"ruleId":"137","severity":1,"message":"164","line":24,"column":5,"nodeType":"139","messageId":"140","endLine":24,"endColumn":26},{"ruleId":"137","severity":1,"message":"165","line":27,"column":5,"nodeType":"139","messageId":"140","endLine":27,"endColumn":20},{"ruleId":"137","severity":1,"message":"159","line":1,"column":29,"nodeType":"139","messageId":"140","endLine":1,"endColumn":38},{"ruleId":"137","severity":1,"message":"166","line":2,"column":10,"nodeType":"139","messageId":"140","endLine":2,"endColumn":14},{"ruleId":"137","severity":1,"message":"167","line":12,"column":3,"nodeType":"139","messageId":"140","endLine":12,"endColumn":10},{"ruleId":"168","severity":1,"message":"169","line":52,"column":10,"nodeType":"170","messageId":"171","endLine":52,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":28,"column":10,"nodeType":"170","messageId":"171","endLine":28,"endColumn":12},{"ruleId":"137","severity":1,"message":"172","line":1,"column":38,"nodeType":"139","messageId":"140","endLine":1,"endColumn":49},{"ruleId":"137","severity":1,"message":"173","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":14},{"ruleId":"137","severity":1,"message":"174","line":9,"column":3,"nodeType":"139","messageId":"140","endLine":9,"endColumn":14},{"ruleId":"151","severity":1,"message":"175","line":62,"column":6,"nodeType":"153","endLine":62,"endColumn":8,"suggestions":"176"},{"ruleId":"137","severity":1,"message":"160","line":1,"column":28,"nodeType":"139","messageId":"140","endLine":1,"endColumn":36},{"ruleId":"137","severity":1,"message":"177","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":18},{"ruleId":"137","severity":1,"message":"178","line":8,"column":8,"nodeType":"139","messageId":"140","endLine":8,"endColumn":23},{"ruleId":"137","severity":1,"message":"179","line":48,"column":32,"nodeType":"139","messageId":"140","endLine":48,"endColumn":40},{"ruleId":"151","severity":1,"message":"180","line":59,"column":6,"nodeType":"153","endLine":59,"endColumn":8,"suggestions":"181"},{"ruleId":"137","severity":1,"message":"182","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":17},{"ruleId":"137","severity":1,"message":"183","line":8,"column":3,"nodeType":"139","messageId":"140","endLine":8,"endColumn":13},{"ruleId":"137","severity":1,"message":"155","line":72,"column":11,"nodeType":"139","messageId":"140","endLine":72,"endColumn":19},{"ruleId":"137","severity":1,"message":"184","line":3,"column":3,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"185","line":5,"column":3,"nodeType":"139","messageId":"140","endLine":5,"endColumn":9},{"ruleId":"137","severity":1,"message":"186","line":7,"column":3,"nodeType":"139","messageId":"140","endLine":7,"endColumn":13},{"ruleId":"137","severity":1,"message":"187","line":16,"column":3,"nodeType":"139","messageId":"140","endLine":16,"endColumn":7},{"ruleId":"137","severity":1,"message":"188","line":17,"column":3,"nodeType":"139","messageId":"140","endLine":17,"endColumn":11},{"ruleId":"137","severity":1,"message":"189","line":21,"column":10,"nodeType":"139","messageId":"140","endLine":21,"endColumn":22},{"ruleId":"151","severity":1,"message":"190","line":50,"column":6,"nodeType":"153","endLine":50,"endColumn":19,"suggestions":"191"},{"ruleId":"151","severity":1,"message":"192","line":112,"column":6,"nodeType":"153","endLine":112,"endColumn":40,"suggestions":"193"},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'MaterialLink' is defined but never used.","'AccountCircle' is defined but never used.","'Feedback' is defined but never used.","'Info' is defined but never used.","'FreeBreakfast' is defined but never used.","'People' is defined but never used.","'audioURL' is assigned a value but never used.","'setAudioURL' is assigned a value but never used.","'proxyURL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'isItFromPlaylist', 'isNextFromMini', 'location.pathname', 'playAudio', and 'playerState'. Either include them or remove the dependency array.","ArrayExpression",["196"],"'unlisten' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentVideoSnippet.id', 'fetchAndSetCurrentVideoSnippet', 'location.pathname', and 'params'. Either include them or remove the dependency array.",["197"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'GlobalContext' is defined but never used.","'gIcon' is defined but never used.","'Typography' is defined but never used.","'slowConnectionTimeout' is assigned a value but never used.","'initialPosition' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useCallback' is defined but never used.","'FormControl' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'setTimer'. Either include it or remove the dependency array.",["198"],"'MainPlayer' is defined but never used.","'SnackbarMessage' is defined but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkDarkMode'. Either include it or remove the dependency array.",["199"],"'PropTypes' is defined but never used.","'withStyles' is defined but never used.","'IconButton' is defined but never used.","'Slider' is defined but never used.","'makeStyles' is defined but never used.","'Done' is defined but never used.","'AlarmOff' is defined but never used.","'downloadSong' is defined but never used.","React Hook useEffect has a missing dependency: 'song.audio'. Either include it or remove the dependency array.",["200"],"React Hook useEffect has a missing dependency: 'params'. Either include it or remove the dependency array.",["201"],"no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [currentVideoSnippet, history, isItFromPlaylist, isNextFromMini, location.pathname, playAudio, playerState, setIsItFromPlaylist]",{"range":"214","text":"215"},"Update the dependencies array to be: [currentVideoSnippet.id, fetchAndSetCurrentVideoSnippet, history, location.pathname, params]",{"range":"216","text":"217"},"Update the dependencies array to be: [setTimer]",{"range":"218","text":"219"},"Update the dependencies array to be: [checkDarkMode]",{"range":"220","text":"221"},"Update the dependencies array to be: [snackbarMsg, song.audio]",{"range":"222","text":"223"},"Update the dependencies array to be: [params, setSearchState, setYtSearchQuery]",{"range":"224","text":"225"},[5975,6017],"[currentVideoSnippet, history, isItFromPlaylist, isNextFromMini, location.pathname, playAudio, playerState, setIsItFromPlaylist]",[12767,12776],"[currentVideoSnippet.id, fetchAndSetCurrentVideoSnippet, history, location.pathname, params]",[1799,1801],"[setTimer]",[1475,1477],"[checkDarkMode]",[1249,1262],"[snackbarMsg, song.audio]",[3106,3140],"[params, setSearchState, setYtSearchQuery]"]ation.pathname', and 'params'. Either include them or remove the dependency array.",["186"],"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'GlobalContext' is defined but never used.","'gIcon' is defined but never used.","'Typography' is defined but never used.","'slowConnectionTimeout' is assigned a value but never used.","'initialPosition' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'useCallback' is defined but never used.","'FormControl' is defined but never used.","'DialogTitle' is defined but never used.","React Hook useEffect has a missing dependency: 'setTimer'. Either include it or remove the dependency array.",["189"],"'youtubeSearch' is defined but never used.","React Hook React.useEffect has missing dependencies: 'isOpen' and 'setisOpen'. Either include them or remove the dependency array.",["190"],"'promised' is defined but never used.","'promises' is defined but never used.","'styles' is assigned a value but never used.","'IconButton' is defined but never used.",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"no-global-assign","no-unsafe-negation",{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [currentVideoSnippet, history, isItFromPlaylist, isNextFromMini, location.pathname, playAudio, playerState, setIsItFromPlaylist]",{"range":"199","text":"200"},"Update the dependencies array to be: [currentVideoSnippet.id, fetchAndSetCurrentVideoSnippet, history, location.pathname, params]",{"range":"201","text":"202"},"Update the dependencies array to be: [setTimer]",{"range":"203","text":"204"},"Update the dependencies array to be: [isOpen, setisOpen]",{"range":"205","text":"206"},[5975,6017],"[currentVideoSnippet, history, isItFromPlaylist, isNextFromMini, location.pathname, playAudio, playerState, setIsItFromPlaylist]",[12767,12776],"[currentVideoSnippet.id, fetchAndSetCurrentVideoSnippet, history, location.pathname, params]",[1799,1801],"[setTimer]",[1846,1848],"[isOpen, setisOpen]"]